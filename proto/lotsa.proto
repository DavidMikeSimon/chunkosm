package LotsaProto;

///////////////////
// Common
///////////////////

message Coord {
  required sint32 universe = 1;
  required sint32 grid = 2;
  required sint32 x = 3;
  required sint32 y = 4;
}

message Chunk {
  required Coord pos = 1;
  required sint32 ver = 2;

  message BlockRun {
    required uint32 count = 1;
    required uint32 block_type = 2;
  }

  repeated BlockRun block_runs = 3;
}

message GenericValue {
  oneof v {
    string string = 1;
    bool boolean = 2;
    int32 integer = 3;
  }
}

///////////////////
// Universe Definition
///////////////////

message PluginDescription {
  message Version {
    required uint32 major = 1;
    required uint32 minor = 2;
    required uint32 patch = 3;
  }

  required string name = 1;
  required Version version = 2;
  required uint32 load_order = 3;
  repeated string lua_impls = 4;
}

message BooleanExpression {
  oneof fn {
    GenericValue eq = 10;
    GenericValue lt = 11;
    GenericValue gt = 12;
  }
}

message InputExpression {
  message FetchValue {
    required uint32 property = 1;
  }

  message CountWhere {
    required uint32 property = 1;
    required BooleanExpression b_expr = 2;
  }

  oneof e {
    FetchValue fetch_value = 10;
    CountWhere count_where = 11;
  }
}

message BlockTypeDef {
  message PropertyProvision {
    message FixedValue {
      required GenericValue value = 1;
    }

    required uint32 property = 1;

    oneof source {
      FixedValue fixed_value = 10;
    }
  }

  required string plugin_name = 1;
  required string name = 2;
  required uint32 index = 3;
  repeated PropertyProvision property_provisions = 4;
  map<string, string> client_hints = 5;
}

message PropertyDef {
  enum PropType {
    BOOLEAN = 0;
  }

  required string plugin_name = 1;
  required string name = 2;
  required uint32 index = 3;
  required PropType prop_type = 4;
  required GenericValue default_value = 5;
}

message BlockInputDef {
  message SelfTarget {}
  message ChebyshevNeighborsTarget {
    required uint32 range = 1;
  }

  required string plugin_name = 1;
  required string name = 2;
  required uint32 index = 3;

  oneof target {
    SelfTarget self = 10;
    ChebyshevNeighborsTarget chebyshev_neighbors = 5;
  }
}

message BlockRuleDef {
  message Prereq {
    required string name = 1;
    required uint32 block_input = 2;
    required BooleanExpression b_expr = 3;
  }

  required string plugin_name = 1;
  required string name = 2;
  required uint32 index = 3;
  repeated Prereq prereqs = 4;
  repeated uint32 updaters_called = 5;
}

message BlockUpdaterDef {
  required string plugin_name = 1;
  required string name = 2;
  required uint32 index = 3;
}

message UniverseDef {
  required uint32 num = 1;
  map<string, PluginDescription> plugins = 2;
  // All keys below are in the format "plugin:name", e.g. "basis:empty"
  map<string, PropertyDef> properties = 3;
  map<string, BlockTypeDef> block_types = 4;
  map<string, BlockInputDef> block_inputs = 5;
  map<string, BlockRuleDef> block_rules = 6;
  map<string, BlockUpdaterDef> block_updaters = 7;
}

///////////////////
// Client -> Server
///////////////////

message ChunkRequest {
  repeated Coord coords = 1;
}

message MessageToServer {
  oneof msg {
     ChunkRequest chunk_request = 10;
     uint32 heartbeat = 11;
  }
}

///////////////////
// Server -> Client
///////////////////

message MessageToClient {
  oneof msg {
    Chunk chunk = 10;
    uint32 heartbeat_ack = 11;
    string global_notice = 12;
  }
}
